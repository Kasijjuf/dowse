#!/usr/bin/zsh

# maps all files in assets/ inside a C header struct (printed on stdout)
# so that all the assets can be dynamically indexed from C (reflexivity)

[[ -r assets ]] || {
   echo "usage: ./$0 (to be launched from inside dowse/src/webui)"
   return 1 }

source ../../zuper/zuper
maps+=(aa)
source ../../zuper/zuper.init

 
cat<<EOF
/* This header was automatically generated by the dowse/src/webui/map_assets script
   `date`
 */


#include <string.h>

#include <kore.h>
#include <assets.h>

#include <libdowse/dowse.h>
#include "assetmap.h"


map_t asset_init() {
  map_t assetmap;
  asset_t atmp;
  struct kore_buf *tmp;

  assetmap = hashmap_new();
EOF
for i in ${(f)"$(find assets -type f)"}; do
	i=`basename $i`
	func $i
	inorm=${i//./_};
	inorm=${inorm//-/_};
	cat <<EOF2

  snprintf(atmp.type, 256, "`mimetype -b $i`");
  atmp.len  = asset_len_$inorm;
  atmp.data = asset_$inorm;
  tmp = kore_malloc(sizeof(asset_t));
  tmp = memcpy(tmp, &atmp, sizeof(asset_t));
  hashmap_put(assetmap, "$i", tmp);

EOF2

done

cat <<EOF3
  return(assetmap);
}

void asset_free() {
// TODO
}
EOF3
